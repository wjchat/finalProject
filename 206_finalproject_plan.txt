SI 206 W17
Put your name here: BJ Chatterson

----

Which option for the final project are you choosing -- 1, 2, or 3? Project 2

IF YOU ARE CHOOSING OPTION 3, answer the following questions:

* Write 1-3 sentences summarizing what the goal of your project is:

The goal of the project is to retrieve information about tweets and movies and then cross refrence tables filled with information by the two to discover interesting trends or nuances. 


* What are your two data sources? Provide links to documentation or websites you will be getting data from.
http://www.omdbapi.com 
and 
www.twitter.com


* Why are you proposing this project?
Because I like using apis and find them interesting and challenging.


* What will the output of this project be? What will it look like, and what information will it contain?
An text file containing intersections of data


* What are your concerns about this proposal?
Getting familiar with the movie API


-----

THE FOLLOWING QUESTIONS ARE FOR EVERYONE. (Though they may be easier if you are choosing Option 1 or 2, because you can reference the Option 1 or 2 instructions.)

* What will at least one of the classes you're going to define be called?
Movie



* What will that class take as input to its constructor?
It will accept a dictionary which represents a movie


* What will 1 instance of this class represent?
One instance of this class will represent a movie



* What are 3 instance variables this class will have? What will they be called, and what information will they hold? Why are they important?
self.title- will contain a string of the title of the movie - important because its the most likely to be mentioned in tweets about this movie.
self.movieID - will contain a string of the movie ID- will be used as unique identification in case two movies have the same title. 
self.actors- will contain a list of strings of names of actors - important because we will use this list to search for tweets related to the movie


* Explain 2 methods the class will have that are not the class constructor (__init__ method) by answering the following questions for each. 
ONE METHOD:
- What will the name of the method be?
lead_actor:

- What will the method do?
return the name of the lead actor


- Will it take any additional input? 
Actors 


- Will it return anything? Should it change anything about the instance/an instance variable?
will return first name of actor in the list


- Why is it useful for this class definition, in this program?
can be used later to get a name to look up tweets with 



ANOTHER METHOD:
- What will the name of the method be?
def __str__

- What will the method do?
will convert an instance variable into a string 


- Will it take any additional input? 
any instance variable


- Will it return anything? Should it change anything about the instance/an instance variable? 
will return that instance variable as a string 

- Why is it useful for this class definition, in this program?
could be useful for displaying integers (ratings, box office, etc) as a string, thus making them a bit easier to work with


[If you definitely want to have a third, feel free to answer those questions a third time, because you'll have to do so eventually. when you write documentation!]


* What will the tables in your database be?
 Tweets
 Users
 Movies


* What fields will each database table have? Which field of them is the primary key? You should list the fields for each database table here, e.g.
Tweets:
- text ... 
(etc.)

Tweets: text, ID (primary key), user who tweeted, movie search tweet came from, # favorites, # retweets

Users: user ID (primary key), screen name, # of favorites

Movie: ID (primary key), title, director, languages, IMDB rating, top billed actor


* List, in English, 2 queries you'll want to make from your database. At least one should be a JOIN. You can always change these later, but start with  ideas you're interested in and lessen the work on yourself later on! 
(e.g. from class examples, maybe "I want to make a query that accesses the numbers of times each user has favorited tweets, and the number of times tweets that user posted have been favorited -- so I'll be joining the Tweets table and the Users table")

-I want to access a list of tweets about the movie that has been favorited more than 500 times (or from a verified account, if this is possible)
-I want to access a list of tweets from the top billed actor, to do this I will be joining the Movie table and the Tweets table


* What are at least 2 of the data processing mechanics you're planning to use? 
I will be using both list comprehension and dictionary comprehension



* Why will each of those be useful to you? What data might you use it on? 
(e.g. "Set comprehension: I think I'm going to be looking for unique names and proper nouns in this big set of text, so I'm going to use a set comprehension"). 
>>>This is especially important if you are doing Option 3, but it's important for everyone!<<<

List comprehension will be useful if I want to turn a list of lists (eg, a list of a list of tweets) into a single list.
Dictionary comprehension will be useful if I want to create a dictionary where the key is the Top actor and the value is a list of tweets regarding the movie



* What will your output look like? Will it be a .txt file? a CSV file? something else? What information will it contain? >>>This is especially important if you are doing Option 3, but it's important for everyone!<<<

My output will be a text file containing tweets about the movie from the top billed actor along with the number of favorites as well as the IMDB rating and I will be comparing the average number of favorites for the top 5 tweets about the movie from the highest paid actor along with the IMDB rating to see if there is a correlation.
